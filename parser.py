import struct


def parse(data, origin):
    if origin == "client":
        dh = str(data.hex())
        if dh[2:7] == "00030":
            print("CHAT: {0}".format(bytes.fromhex(data.hex()).decode("utf-8")))
            # print(struct.unpack("h", data[3:]))
        print(data.hex())
        # print(data[0:1])
        header = abs(struct.unpack("B", data[0:1])[0])  # Header (size)
        extended = struct.unpack("B", data[1:2])[0]
        packet_id = struct.unpack("B", data[2:3])[0]
        if extended > 0:
            somethingelse = packet_id
            packet_id = struct.unpack("B", data[3:4])[0]
        print(f"PACKET {packet_id} WITH SIZE {abs(header)}")
        # print(hex(struct.unpack("?", data[2:3])[0]))

        pass


'''

ln m->id   ? x                 y                 z             onground
1b 00 11 c03 adec029f6a0fc 405 a800000000000 405 5ca68e84ff0b5 01
1b 00 11 c03 ad5bf08022374 405 a800000000000 405 5d82b74144e51 01
1b 00 11 c03 acc31d534931b 405 a800000000000 405 5e5fa1594187e 01
1b 00 11 c03 ac258288fa687 405 a800000000000 405 5f3cf50416fed 01
1b 00 11 c03 aa84eb3c39017 405 a800000000000 405 5feebd887c37c 01
1b 00 11 c03 a856ebda5dc80 405 a800000000000 405 6088bfb4a3e7d 01
1b 00 11 c03 a5dbb73933817 405 a800000000000 405 6115c6bbc7fec 01
1b 00 11 c03 a3365ac48230d 405 a800000000000 405 619bb75302b55 01
1b 00 11 c03 a079f9f954a8a 405 a800000000000 405 621dc93b71562 01
1b 00 11 c03 9db107f6a4ed1 405 a800000000000 405 629dbe3a2df3f 01
1b 00 11 c03 9ae1395a34b35 405 a800000000000 405 631c8be245142 01
1b 00 11 c03 980daba32268a 405 a800000000000 405 639ab849205cf 01
1b 00 11 c03 94efc7afce86f 405 a800000000000 405 63cd11ec6d144 01
1b 00 11 c03 91a94d39fd7fd 405 a800000000000 405 63d6054879ff4 01
1b 00 11 c03 8e4ca98c1e3c6 405 a800000000000 405 63c85dfb67a5e 01
1b 00 11 c03 8ae3ec4a4cad3 405 a800000000000 405 63ae5f29f66aa 01
1b 00 11 c03 877493c1613ed 405 a800000000000 405 638da33fcf82e 01
1b 00 11 c03 84019fc865444 405 a800000000000 405 6369396e8a04b 01
1b 00 11 c03 808cb39cf603d 405 a800000000000 405 6342cd55d85b9 01
1b 00 11 c03 7d16b426de4e0 405 a800000000000 405 631b487148385 01
1b 00 11 c03 79a01e619ba5e 405 a800000000000 405 62f32a3c1f3c2 01
1b 00 11 c03 7629368ab836b 405 a800000000000 405 62cab85139b5b 01
1b 00 11 c03 748f1ff0f8535 405 a800000000000 405 624fedf2f600d 01
1b 00 11 c03 73f960f80627c 405 a800000000000 405 61a82da74889c 01
1b 00 11 c03 73f1c79b07e74 405 a800000000000 405 60e7e0efceacb 01
1b 00 11 c03 743bf123c4c21 405 a800000000000 405 601a2cecfcc10 01
1b 00 11 c03 74ae98c6d5550 405 a800000000000 405 5f45276d848e8 01
1b 00 11 c03 75375c4e74f90 405 a800000000000 405 5e6c230182dfb 01
1b 00 11 c03 7582089a9ca11 405 a800000000000 405 5df5a5322e813 01
1b 00 11 c03 75aace1a84ce4 405 a800000000000 405 5db4f2ef1448c 01
1b 00 11 c03 75c110faa32dd 405 a800000000000 405 5d919ff00f778 01
   
1b 00 11 c03 f2d246a922cfe 405 b43ebcc21ed2e 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 b2bec0a0c4f82 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 b13ec2f2c241b 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 afbec456c0a10 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 ae3ec52bf2da3 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 acbec5ab7762f 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 ab3ec5f793b50 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 a9bec624d7e64 405 8640405267c99 00
1b 00 11 c03 f2d246a922cfe 405 a83ec63f9a6a3 405 8640405267c99 00



CHAT:  a
CHAT:  bc
CHAT:  def
CHAT:  ghi
04 00 03 0161
05 00 03 026263
06 00 03 03646566
06 00 03 03676869


chat with many 'a's
96 01 000392016161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161


MAX
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

MAX + 1
    size extension
80 01 00 037d6 161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
PACKET 0 WITH SIZE -128


7f 00 037c6 1616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
PACKET 3 WITH SIZE 127


80 01 00 037 d6 161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
PACKET 0 WITH SIZE 128

fa 01 00 03 f6 01616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
PACKET 3 WITH SIZE 6
'''
